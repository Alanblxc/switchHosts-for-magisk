name: Release

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # 获取完整历史记录，便于版本比较

    - name: Update version in update.json
      shell: pwsh
      run: |
        $version = "${{ github.ref_name }}"
        $content = Get-Content -Path .\update.json -Raw
        $content = $content -replace '"version": ".*?"', "`"version`": `"$version`""
        $content = $content -replace 'SwitchHosts-.*?.zip', "SwitchHosts-$version.zip"
        $content | Set-Content -Path .\update.json
        
    - name: Commit update.json changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add update.json
        git commit -m "Update version in update.json to ${{ github.ref_name }}" || echo "No changes to commit"
        git push

    - name: Zip module
      shell: pwsh
      run: |
        Compress-Archive -Path * -DestinationPath SwitchHosts-${{ github.ref_name }}.zip -Exclude ".git", ".github", ".vscode", "*.md", "LICENSE", ".gitignore", ".gitattributes","changelog.md",""update.json"

    - name: Read changelog
      id: changelog
      shell: pwsh
      run: |
        $changelog = Get-Content -Path .\changelog.md -Raw
        echo "Changelog content: $changelog"  # 调试信息
        echo "::set-output name=changelog::$changelog"

    - name: Create Release and Upload Release Asset
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref }}
        body: |
          ${{ steps.changelog.outputs.changelog }}  # Use changelog.md content as Release Body
        generate_release_notes: false  # Disable default changelog generation
        draft: false
        prerelease: false
        files: |
          SwitchHosts-${{ github.ref_name }}.zip
          LICENSE